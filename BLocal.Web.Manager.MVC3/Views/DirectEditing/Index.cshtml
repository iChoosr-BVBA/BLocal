@using BLocal.Web.Manager.Models.DirectEditing
@model IndexModel
@{
    ViewBag.Title = "Manual Editing";
    ViewBag.PageName = "DirectEditing.Index";
}
@section Head {
    <script type="text/javascript">
        window.urls = window.urls || {};
        window.urls.current = '@Html.Raw(Url.Action("Index", "DirectEditing", new { providerConfigName = Model.Provider.Name }))';
        window.urls.updateCreateValue = '@Html.Raw(Url.Action("UpdateCreateValue", "DirectEditing", new { providerConfigName = Model.Provider.Name }))';
        window.urls.moveAndUpdateValue = '@Html.Raw(Url.Action("MoveAndUpdateValue", "DirectEditing", new { providerConfigName = Model.Provider.Name }))';
        window.urls.deleteValue = '@Html.Raw(Url.Action("DeleteValue", "DirectEditing", new { providerConfigName = Model.Provider.Name }))';
    </script>
}

<h1>@Html.ActionLink("Home", "Overview", "Home") - Manual Editing of <span style="color: @Model.Provider.Color">@Model.Provider.Name</span></h1>
<p><span class="open">open</span> | <span class="collapse">collapse</span> | <span class="reload">reload</span> | <span class="hardreload" title="dump localization cache, reload from scratch">hard reload</span></p>
    
<section class="general">
    <h2>Filter</h2>
    <form id="filterform">
        <div>
            <label>Part</label>
            @{ var nextLevelLocalizedParts = Model.Parts.ToList(); }
            @for (var level = 0; level < 5; level++) {
                var currentLevelLocalizedParts = nextLevelLocalizedParts.ToList();
                if (!currentLevelLocalizedParts.Any()) {
                    break;
                }
                nextLevelLocalizedParts = currentLevelLocalizedParts.SelectMany(part => part.Subparts).ToList();
                
                <select class="part" data-level="@level">
                    <option></option>
                    @foreach (var partName in currentLevelLocalizedParts.Select(part => part.Part.Name).Distinct()) {
                        <option>@partName</option>
                    }
                </select>
            }
        </div>
        <div><label for="key">Key</label> <input type="text" class="filter" id="key" /></div>
        <div><label for="locale">Locale</label> <input type="text" class="filter" id="locale" /></div>
        <div><label for="content">Content</label> <input type="text" class="filter" id="content" /></div>
        <div><input type="submit" value="Apply Filter" /></div>
    </form>
    <div><p class="result"></p></div>
</section>


@foreach(var localizedPart in Model.Parts) {
    @RenderPart(localizedPart)
}

@helper RenderPart(LocalizedPart part) {
    <section class="part" data-part="@part.Part.ToString()">
        <h2><span class="title">@part.Part.ToString()</span> [<span class="count">@part.Localizations.Count</span>]</h2>
        <section class="values">
            @foreach (var value in part.Localizations.OrderBy(value => value.Qualifier.Key).ThenBy(value => value.Qualifier.Locale.Name)) {
                <p class="value" data-locale="@value.Qualifier.Locale" data-key="@value.Qualifier.Key" title="Last edit by @value.History.LatestEntry().Author on @value.History.LatestEntry().DateTimeUtc.ToLocalTime()">
                    <span class="key">@value.Qualifier.Key</span>
                    <span class="locale"><nobr>@value.Qualifier.Locale</nobr></span>
                    <span class="content">@value.Value</span>
                    <span class="clear"></span>
                </p>
            }
        </section>
        @foreach(var subpart in part.Subparts) {
            @RenderPart(subpart)
        }
    </section>
}
    
<div id="details" class="popup">
    <h2>Details</h2>
    <form>
        <p><span class="lbl part">Part</span><span class="lbl key">Key</span><span class="lbl locale">Locale</span></p>
        <p><input type="text" class="val part"></input><input type="text" class="val key"></input><input type="text" class="val locale"></input></p>
        <p><span class="lbl">Content</span></p>
        <div><textarea class="content"></textarea></div>
        <div>
            <input type="button" class="save" value="Save"/>
            <input type="button" class="updaterecreate" style="display: none" value="Move" title="deletes current value, recreates to new value" />
            <input type="button" class="updatecopy" style="display: none" value="Copy" title="creates a copy if key or part changed, does not delete original" />
            <input class="updatedelete" type="button" value="Remove" title="bye-bye" />
            <p>(visible changes are indications, press reload to confirm)</p>
            <p id="manualEditErrors"></p>
        </div>
    </form>
</div>